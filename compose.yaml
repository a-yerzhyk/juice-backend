# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  juice-api:
    build:
      context: .
    depends_on:
      - juice-database
    environment:
      NODE_ENV: ${NODE_ENV}
      PROTOCOL: ${PROTOCOL}
      DOMAIN: ${DOMAIN}
      CLIENT_SUB_DOMAIN: ${CLIENT_SUB_DOMAIN}
      SERVER_SUB_DOMAIN: ${SERVER_SUB_DOMAIN}
      SERVER_PORT: ${SERVER_PORT}
      JWT_SECRET: ${JWT_SECRET}
      DB_NAME: juice
      DB_ORIGIN: juice-database:27017
      DB_USERNAME: ${MONGO_DB_USERNAME}
      DB_PASSWORD: ${MONGO_DB_PASSWORD}
    ports:
      - 8000:8000

  juice-database:
    image: mongo:7
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    volumes:
     - juice_db:/data/db
    ports:
      - 27017:27017

volumes:
  juice_db:

# this attempt to set a cookie via a Ser-Cookie header was blocked because it had the "SameSite=Strict" attribute but came from a cross-site response which was not the response to a top-level navigation
# this attempt to set a cookie via a Set-Cookie header was blocked because its Domain attribute was invalid with regards to the current host url